name: Deploy to AWS using Serverless Framework

on:
  push:
    branches:
      - main  # ou a branch que você deseja

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout do código
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Configuração do Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Altere para a versão do Node que você usa no seu projeto

      # 3. Instalar dependências do projeto
      - name: Install dependencies
        run: |
          cd be
          npm install

      # 4. Instalar Serverless Framework
      - name: Install Serverless Framework
        run: |
          npm install -g serverless

      # 5. Assumir a role no AWS e configurar as credenciais temporárias
      - name: Assume AWS Role
        id: assume_role
        run: |
          ROLE_ARN="arn:aws:iam::477763713497:role/serverless-role"
          CREDENTIALS=$(aws sts assume-role --role-arn $ROLE_ARN --role-session-name serverless-session)
          echo $CREDENTIALS
          echo "AWS_ACCESS_KEY_ID=$(echo $CREDENTIALS | jq -r .Credentials.AccessKeyId)" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=$(echo $CREDENTIALS | jq -r .Credentials.SecretAccessKey)" >> $GITHUB_ENV
          echo "AWS_SESSION_TOKEN=$(echo $CREDENTIALS | jq -r .Credentials.SessionToken)" >> $GITHUB_ENV

      # 6. Realizar o deploy com Serverless Framework
      - name: Deploy to AWS
        run: |
          cd be
          serverless deploy
        env:
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ env.AWS_SESSION_TOKEN }}

