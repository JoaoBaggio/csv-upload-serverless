service: csv-processor-service

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  stage: ${opt:stage, 'dev'}  # Usando variável de estágio para diferenciar dev e prod
  environment:
    LOCALSTACK: ${self:provider.stage}  # Se estiver em 'dev', irá usar LocalStack
    AWS_REGION: us-east-1
    BUCKET_NAME: csv-bucket-2
    CSV_QUEUE_NAME: CsvQueue
    SQS_QUEUE_URL: !GetAtt CsvQueue.QueueUrl
    DYNAMODB_TABLE: Users-2

plugins:
  - serverless-localstack

custom:
  localstack:
    stages:
      - dev
    endpoint: http://localhost:4566  # Localstack endpoint
    region: us-east-1

functions:
  generatePresignedUrl:
    handler: src/lambda/generatePresignedUrl.handler
    events:
      - http:
          path: process-csv
          method: post
          cors: true
      - http:
          path: process-csv
          method: options
          cors: true
  csvProcessor:
    handler: src/lambda/csvProcessor.handler
    events:
      - s3:
          bucket: ${self:provider.environment.BUCKET_NAME}
          event: s3:ObjectCreated:*
          rules:
            - suffix: .csv
  sqsConsumer:
    handler: src/lambda/sqsConsumer.handler
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - CsvQueue
              - Arn
          batchSize: 10
  getUsers:
    handler: src/lambda/getUsers.handler
    events:
      - http:
          path: api/get-users
          method: get
          cors: true
      - http:
          path: api/get-users
          method: options
          cors: true

resources:
  Resources:
    CsvBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.BUCKET_NAME}
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders:
                - "*"
              AllowedMethods:
                - "GET"
                - "PUT"
                - "POST"
                - "DELETE"
                - "HEAD"
              AllowedOrigins:
                - "*"
              ExposeHeaders:
                - "ETag"
              MaxAge: 3000
    CsvQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: csv-queue

    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        AttributeDefinitions:
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: email
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

  Outputs:
    CsvBucketName:
      Description: "Bucket S3 name"
      Value: !Ref CsvBucket
    CsvQueueUrl:
      Description: "URL da fila SQS"
      Value: !Ref CsvQueue
    UsersTableName:
      Description: "Nome da tabela DynamoDB"
      Value: !Ref UsersTable
